#!/bin/bash 

STARTCMD="df | grep '/exports/media' | awk '{print \$3}'"
UPDATECMD="df | grep /raid | awk '{print \$3}'"
METRIC="k"
OUTPUT=mtimer.txt

output() {
    if [ -z $OUTPUT ]; then
       echo "$*"
   else
      echo "$*" >> $OUTPUT
  fi
} 

clearscreen() {
    if [ -z $OUTPUT ] ; then
        clear
    else
        echo "" > $OUTPUT
    fi
}

STARTTIME=$(date +%s)
IFS="
"
humanise() {
    #set -x
    if [ -z $1 ]; then
        return 1
    fi

    local SECS=$1
    local ETA=""

    output ""
    output "Estimated time until completion: "
    local WEEKS=$(calc -p $SECS \/ 604800 | sed 's/~//g'|cut -d. -f1)
    SECS=$(calc $SECS - \($WEEKS \* 604800\))
    [ $WEEKS -gt 0 ] && ETA="$WEEKS w, "

    local DAYS=$(calc -p $SECS \/ 86400 | sed 's/~//g'|cut -d. -f1)
    SECS=$(calc $SECS - \($DAYS \* 86400\))
    [ $DAYS -gt 0 ] && ETA="$ETA$DAYS d, "

    local HOURS=$(calc -p $SECS \/ 3600 | sed 's/~//g'|cut -d. -f1)
    SECS=$(calc $SECS - \($HOURS \* 3600\))
    [ $HOURS -gt 0 ] && ETA="$ETA$HOURS h, "

    local MINS=$(calc -p $SECS \/ 60 | sed 's/~//g'|cut -d. -f1)
    SECS=$(calc $SECS - \($MINS \* 60\))
    [ $MINS -gt 0 ] && ETA="$ETA$MINS m, "

    SECS=$(echo $SECS | sed 's/[ \t]*//g')
    ETA="$ETA$SECS s"
    output "$ETA"
    return
}

TARGETSIZE=$(sh -c $STARTCMD)
STARTSIZE=$(sh -c $UPDATECMD)
CURRENTSIZE=0

while [ $CURRENTSIZE -lt $TARGETSIZE ]; do
    sleep 2
    NOW=$(date +%s)
    CURRENTSIZE=$(sh -c $UPDATECMD)
    ELAPSEDTIME=$(calc $NOW - $STARTTIME)
    AMOUNTTOGO=$(calc $TARGETSIZE - $CURRENTSIZE)
    GROWTH=$(calc $CURRENTSIZE - $STARTSIZE)
    RATE=$(calc -p $GROWTH \/ $ELAPSEDTIME | sed 's/~//g' | cut -d. -f1)
    TIMETOGO=$(calc -p $AMOUNTTOGO \/ $RATE | sed 's/~//g'|cut -d. -f1)
    clearscreen
    output "Current size:   $CURRENTSIZE $METRIC"
    output "Target size:    $TARGETSIZE $METRIC "
    output "Amount to go: $AMOUNTTOGO $METRIC"
    output "Rate:           $RATE $METRIC/s"
    humanise $TIMETOGO
done


